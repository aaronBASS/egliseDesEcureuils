<?xml version="1.0" encoding="UTF-8"?>
<krpano version="1.19">

    
  <!-- Spot Style - arrowFlatDown -->


  <style name="IconarrowFlatDown"
         url="%FIRSTXML%/spots/iconasset_7_user_defaultpoint6.png"
         visible="false"
         edge="center"
         onhover="onhoverIconarrowFlatDown"
         onover="onoverIconarrowFlatDown"
         onout="onoutIconarrowFlatDown"

         height="30"
         width="30"
         />
  <action name="onhoverIconarrowFlatDown">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconarrowFlatDown">
tween(scale, 1.2);


  </action>
  <action name="onoutIconarrowFlatDown">
    hideTooltip();
    tween(scale, 1);


  </action>



    
  <!-- Spot Style - point3d -->


  <style name="Iconpoint3d"
         url="%FIRSTXML%/spots/iconasset_2_user_defaultpoint8.png"
         visible="false"
         edge="center"
         onhover="onhoverIconpoint3d"
         onover="onoverIconpoint3d"
         onout="onoutIconpoint3d"

         height="40"
         width="40"
         />
  <action name="onhoverIconpoint3d">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconpoint3d">
tween(scale, 1.2);


  </action>
  <action name="onoutIconpoint3d">
    hideTooltip();
    tween(scale, 1);


  </action>



    
  <!-- Spot Style - arrowFlatLeft 1 -->


  <style name="IconarrowFlatLeft1"
         url="%FIRSTXML%/spots/iconasset_5_user_defaultpoint9.png"
         visible="false"
         edge="center"
         onhover="onhoverIconarrowFlatLeft1"
         onover="onoverIconarrowFlatLeft1"
         onout="onoutIconarrowFlatLeft1"

         height="40"
         width="40"
         />
  <action name="onhoverIconarrowFlatLeft1">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconarrowFlatLeft1">
tween(scale, 1.2);


  </action>
  <action name="onoutIconarrowFlatLeft1">
    hideTooltip();
    tween(scale, 1);


  </action>



    
  <!-- Spot Style - arrowFlatUpLeft -->


  <style name="IconarrowFlatUpLeft"
         url="%FIRSTXML%/spots/iconasset_22_user_defaultpoint10.png"
         visible="false"
         edge="center"
         onhover="onhoverIconarrowFlatUpLeft"
         onover="onoverIconarrowFlatUpLeft"
         onout="onoutIconarrowFlatUpLeft"

         height="40"
         width="40"
         />
  <action name="onhoverIconarrowFlatUpLeft">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconarrowFlatUpLeft">
tween(scale, 1.2);


  </action>
  <action name="onoutIconarrowFlatUpLeft">
    hideTooltip();
    tween(scale, 1);


  </action>



    
  <!-- Spot Style - arrowOrthoUp 1 -->


  <style name="IconarrowOrthoUp1"
         url="%FIRSTXML%/spots/iconasset_18_user_defaultpoint12.png"
         visible="false"
         edge="center"
         onhover="onhoverIconarrowOrthoUp1"
         onover="onoverIconarrowOrthoUp1"
         onout="onoutIconarrowOrthoUp1"

         height="40"
         width="40"
         />
  <action name="onhoverIconarrowOrthoUp1">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconarrowOrthoUp1">
tween(scale, 1.2);


  </action>
  <action name="onoutIconarrowOrthoUp1">
    hideTooltip();
    tween(scale, 1);


  </action>



    
  <!-- Spot Style - arrowFlatUpRight -->


  <style name="IconarrowFlatUpRight"
         url="%FIRSTXML%/spots/iconasset_10_user_defaultpoint13.png"
         visible="false"
         edge="center"
         onhover="onhoverIconarrowFlatUpRight"
         onover="onoverIconarrowFlatUpRight"
         onout="onoutIconarrowFlatUpRight"

         height="40"
         width="40"
         />
  <action name="onhoverIconarrowFlatUpRight">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconarrowFlatUpRight">
tween(scale, 1.2);


  </action>
  <action name="onoutIconarrowFlatUpRight">
    hideTooltip();
    tween(scale, 1);


  </action>



    
  <!-- Spot Style - arrowFlatUp 2 -->


  <style name="IconarrowFlatUp2"
         url="%FIRSTXML%/spots/iconasset_19_user_defaultpoint15.png"
         visible="false"
         edge="center"
         onhover="onhoverIconarrowFlatUp2"
         onover="onoverIconarrowFlatUp2"
         onout="onoutIconarrowFlatUp2"

         height="40"
         width="40"
         />
  <action name="onhoverIconarrowFlatUp2">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconarrowFlatUp2">
tween(scale, 1.2);


  </action>
  <action name="onoutIconarrowFlatUp2">
    hideTooltip();
    tween(scale, 1);


  </action>



    
  <!-- Spot Style - arrowOrthoUpMED -->


  <style name="IconarrowOrthoUpMED"
         url="%FIRSTXML%/spots/iconasset_18_user_defaultpoint16.png"
         visible="false"
         edge="center"
         onhover="onhoverIconarrowOrthoUpMED"
         onover="onoverIconarrowOrthoUpMED"
         onout="onoutIconarrowOrthoUpMED"

         height="50"
         width="50"
         />
  <action name="onhoverIconarrowOrthoUpMED">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconarrowOrthoUpMED">
tween(scale, 1.2);


  </action>
  <action name="onoutIconarrowOrthoUpMED">
    hideTooltip();
    tween(scale, 1);


  </action>



    
  <!-- Spot Style - Video -->


  <style name="IconVideo"
         url="%FIRSTXML%/spots/asset_25_user_defaultpoint18.png"
         visible="false"
         edge="center"
         onhover="onhoverIconVideo"
         onover="onoverIconVideo"
         onout="onoutIconVideo"

         height="40"
         width="40"
         />
  <action name="onhoverIconVideo">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconVideo">
tween(scale, 1.2);


  </action>
  <action name="onoutIconVideo">
    hideTooltip();
    tween(scale, 1);


  </action>



<!-- ********** -->
<!-- Button1 -->
<!-- id : button1 -->
<!-- ********** -->
  <!-- EMPTY BUTTON : no image file -->
<!-- ********** -->
<!-- Button -->
<!-- id : button -->
<!-- ********** -->
  <!-- EMPTY BUTTON : no image file -->

<!-- ********** -->
<!-- Gallery -->
<!-- id : gallery -->
<!-- ********** -->

<ptplugin name="gallery" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="15" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="slideshow_autoplay" value="false" type="bool" />
		<option name="slideshow" value="5000" type="int" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="0.80000000000000004" type="float" />
		<option name="container_topleft_border_radius" value="15" type="int" />
		<option name="container_topright_border_radius" value="15" type="int" />
		<option name="container_bottomleft_border_radius" value="15" type="int" />
		<option name="container_bottomright_border_radius" value="15" type="int" />
		<option name="container_border_width" value="0" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.50000762951094835" type="float" />

		<option name="item_border_width" value="0" type="int" />
		<option name="item_border_color" value="ffffff" type="string" />
		<option name="item_border_alpha" value="1" type="float" />
		
		<option name="title_displayed" value="false" type="bool" />
		
		<option name="caption_displayed" value="false" type="bool" />
		
		<option name="play_displayed" value="true" type="bool" />
		<option name="play_position" value="bottomleft" type="string" />
		<option name="play_text" value="galleryplay_text" type="string" />




		<option name="navigation_displayed" value="true" type="bool" />
		<option name="navigation_position" value="bottom" type="string" />
		<option name="counter_color" value="666666" type="string" />
		<option name="navprev_text" value="gallerynavprev_text" type="string" />
		<option name="navnext_text" value="gallerynavnext_text" type="string" />




		<option name="navigation_arrows" value="true" type="bool" />




		<option name="fullscreen_displayed" value="true" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="galleryfullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="galleryclose_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_gallery')" type="string" />
		<option name="zorder" value="4" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		<item name="item_1" title="gallerypicture_title0" caption="gallerypicture_caption0" value="lesEcureuilsdata/graphics/gallery/"/>
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_gallery">
	set(ptplugin[gallery].jsready, true);
</action>

<action name="showGallery_gallery">
	ifnot(ptplugin[gallery].isOpen,
		set(ptplugin[gallery].isOpen, true);
		set(ptplugin[gallery].doNotDeleteMe, false);
		set(gallery_boxurl, %1);
		pauseautorotation(forceplugin);

		js(invokePluginFunction(gallery, openKolorBox, %1));
		events.dispatch(onremovedisplayedobject);
	,
		if(%1 !== null AND %1 != gallery_boxurl,
			closeKolorBox_gallery();
			delayedcall(0.3,showGallery_gallery(%1););
		);
	);
</action>

<action name="toggleGallery_gallery">
	js(invokePluginFunction(gallery, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_gallery">
	js(invokePluginFunction(gallery, closeKolorBox));
</action>

<action name="closeKolorBoxCallback_gallery">
	resumeautorotation(forceplugin);

	set(ptplugin[gallery].isOpen, false);
</action>

<action name="changeLanguage_gallery">
	if(ptplugin[gallery].jsready,
		js(invokePluginFunction(gallery, changeLanguage));
	,
		delayedcall(delay_gallery, 0.1, changeLanguage_gallery(););
	);
</action>

<events name="kolorBoxEvents_gallery" 
	keep="true"
	changetourlanguage="changeLanguage_gallery();"
	/>

<!-- ********** -->
<!-- SketchFabBox -->
<!-- id : websiteViewer -->
<!-- ********** -->

<ptplugin name="websiteViewer" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="15" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="0.80000000000000004" type="float" />
		<option name="container_topleft_border_radius" value="15" type="int" />
		<option name="container_topright_border_radius" value="15" type="int" />
		<option name="container_bottomleft_border_radius" value="15" type="int" />
		<option name="container_bottomright_border_radius" value="15" type="int" />
		<option name="container_border_width" value="0" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="false" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.50000762951094835" type="float" />

		<option name="title_displayed" value="false" type="bool" />
		<option name="title_position" value="top" type="string" />
		<option name="title_font" value="Verdana" type="string" />
		<option name="title_size" value="14" type="int" />
		<option name="title_weight" value="normal" type="string" />
		<option name="title_style" value="normal" type="string" />
		<option name="title_decoration" value="none" type="string" />
		<option name="title_color" value="000000" type="string" />
		<option name="caption_displayed" value="false" type="bool" />
		<option name="iframe_scrolling" value="auto" type="string" />
		<option name="iframe_default_width" value="1100" type="int" />
		<option name="iframe_default_height" value="800" type="int" />
		<option name="iframe_devices_width" value="1100" type="int" />
		<option name="iframe_devices_height" value="800" type="int" />
		<option name="force_ios_scrolling" value="true" type="bool" />
		<option name="fullscreen_displayed" value="true" type="bool" />
		<option name="fullscreen_position" value="topright" type="string" />
		<option name="fullscreen_text" value="websiteViewerfullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="websiteViewerclose_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_websiteViewer')" type="string" />
		<option name="zorder" value="5" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_websiteViewer">
	set(ptplugin[websiteViewer].jsready, true);
</action>

<action name="openWebsite_websiteViewer">
	ifnot(ptplugin[websiteViewer].isOpen,
		set(ptplugin[websiteViewer].isOpen, true);
		set(ptplugin[websiteViewer].doNotDeleteMe, false);
		getmessage(websiteViewer_boxurl, %1);
		txtadd(websiteViewer_boxurl, ?iframe=true);
		pauseautorotation(forceplugin);

		js(invokePluginFunction(websiteViewer, loadSingleArrayItem, get(websiteViewer_boxurl), %2));
		events.dispatch(onremovedisplayedobject);
	,
		if('%1' != websiteViewer_boxurl,
			closeKolorBox_websiteViewer();
			delayedcall(0.3,openWebsite_websiteViewer(%1,%2););
		);
	);
</action>

<action name="toggleWebsite_websiteViewer">
	js(invokePluginFunction(websiteViewer, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_websiteViewer">
	js(invokePluginFunction(websiteViewer, closeKolorBox));
</action>

<action name="closeKolorBoxCallback_websiteViewer">
	resumeautorotation(forceplugin);

	set(ptplugin[websiteViewer].isOpen, false);
</action>

<action name="changeLanguage_websiteViewer">
	if(ptplugin[websiteViewer].jsready,
		stopdelayedcall(delay_websiteViewer);
		js(invokePluginFunction(websiteViewer, changeLanguage));
	,
		delayedcall(delay_websiteViewer, 0.1, changeLanguage_websiteViewer(););
	);
</action>

<events name="kolorBoxEvents_websiteViewer" 
	keep="true"
	changetourlanguage="changeLanguage_websiteViewer();"
	/>

<!-- ********** -->
<!-- Title -->
<!-- id : title -->
<!-- ********** -->

  <events name="title_events" 
    onTourStart="showtitle();"
    hidetourcontrols="hidetitle();" 
    showtourcontrols="showtitle();" 
    onnewpano="updatetitle();"
    changetourlanguage="changeLanguagetitle"
    keep="true" />

  <action name="hidetitle">set(layer[title].visible, false);</action>
  <action name="showtitle">set(layer[title].visible, true );</action>

  <action name="changeLanguagetitle">
    updatetitle();
  </action>

  <action name="updatetitle">
    getmessage(layer[title].html, get(scene[get(xml.scene)].titleid));
    escape(layer[title].html);
  </action>
  <layer name="title" keep="true" zorder="6"
         type="text"
         align="topleft" x="0" y="0"
         bg="false"
         bgborder="0"
         alpha="1"
         visible="false"
         capture="false" handcursor="false" enabled="false"
         interactivecontent="false" 
         txtshadow="1.0 1.0 4.0 0x000000 1.0"
         css="text-align:left;
              color:#ffffff;
              font-family:Arial;
              font-weight:bold;
              font-size:16px;"/>

<!-- ********** -->
<!-- Description -->
<!-- id : description -->
<!-- ********** -->

<ptplugin name="description" canStart="false" newPano="false" openatstart="false" mode="spot" startMethod="" engine="kolorArea">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="start_position" value="left" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="background_color" value="f2f2f2" type="string" />
		<option name="background_alpha" value="1" type="float" />
		<option name="topleft_radius" value="0" type="int" />
		<option name="topright_radius" value="0" type="int" />
		<option name="bottomleft_radius" value="0" type="int" />
		<option name="bottomright_radius" value="0" type="int" />
		<option name="area_border_width" value="0" type="int" />
		<option name="area_border_color" value="f2f2f2" type="string" />
		<option name="area_border_alpha" value="1" type="float" />
		<option name="padding" value="15" type="int" />
		<option name="display_title" value="false" type="bool" />
		<option name="close_displayed" value="true" type="bool" />
		<option name="close_text" value="descriptiondisplay_close_text" type="string" />

		<option name="overlay_displayed" value="false" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.50000762951094835" type="float" />

		<option name="area_width" value="20" type="int" />
		<option name="area_height" value="100" type="int" />
		<option name="area_width_unit" value="percent" type="string" />
		<option name="area_height_unit" value="percent" type="string" />
		<option name="animation" value="false" type="bool" />
		<option name="animation_duration" value="500" type="int" />
		<option name="refresh_content" value="true" type="bool" />
		<option name="close_callback" value="invokeKrFunction('closeKolorAreaCallback_description')" type="string" />
		<option name="close_on_click" value="true" type="bool" />
		<option name="close_onclick_callback" value="invokeKrFunction('closeKolorAreaCallbackClick_description')" type="string" />
		<option name="zorder" value="7" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
</ptplugin>

<action name="kolorAreaJsReady_description">
	set(ptplugin[description].jsready, true);

</action>


<action name="openKolorArea_description">
	ifnot(ptplugin[description].isOpen,
		set(ptplugin[description].isOpen, true);
		
		js(showKolorArea(description, get(ptplugin[description].descID)));
		events.dispatch(onremovedisplayedobject);
	);
</action>

<action name="closeKolorArea_description">
	if(ptplugin[description].isOpen,
		js(invokePluginFunction(description, closeKolorArea));
	);
</action>

<action name="toggleKolorArea_description">
	if(ptplugin[description].isOpen,
		closeKolorArea_description();
	,
		openKolorArea_description();
	);
</action>

<action name="closeKolorAreaCallback_description">
	set(ptplugin[description].isOpen, false);
	if(tour_displayinfo,hideTourInfo();

	);
</action>

<action name="closeKolorAreaCallbackClick_description">


	if(tour_displayinfo,hideTourInfo();

	);
</action>


<action name="showKolorArea_description">
	ifnot(ptplugin[description].startMethod == "",
		delayedcall(0,get(ptplugin[description].startMethod));
	,
		set(ptplugin[description].isOpen, true);
		
		js(invokePluginFunction(description, showKolorArea, %1));
		events.dispatch(onremovedisplayedobject);
	);
</action>
	
<action name="hideKolorArea_description">
	
	set(ptplugin[description].isOpen, false);
	js(invokePluginFunction(description, hideKolorArea, %1));
</action>

<action name="openDescription_description">
	openKolorArea_description();
</action>

<action name="openSpotDescription_description">
	set(ptplugin[description].descID, %1);
	openKolorArea_description();
</action>

<action name="closeDescription_description">
	set(ptplugin[description].currentGroup, false);
	if(%1,
		set(restore_description, true);
	,
		set(restore_description, false);
	);
	closeKolorArea_description();
</action> 

<action name="showDescription_description">
	if(ptplugin[description].canStart,
		if(ptplugin[description].descID != "",
			openDescription_description();
		,
			hideKolorArea_description(false);
		);
		set(ptplugin[description].startMethod, "");
	);
</action>



<action name="changeLanguage_description">
	if(ptplugin[description].jsready,
		stopdelayedcall(delay_description);
		js(invokePluginFunction(description, changeLanguage, true));
	,
		delayedcall(delay_description, 0.1, changeLanguage_description(););
	);
</action>

<events name="kolorAreaEvents_description" 
	keep="true"
	onTourStart="set(ptplugin[description].canStart, true);if(ptplugin[description].openatstart,showTourInfo();
);"
	onhidetourinfo="if(ptplugin[description].isOpen,closeDescription_description(false););"
	changetourlanguage="changeLanguage_description();"
/>

<!-- ********** -->
<!-- Web video Box -->
<!-- id : webVideoViewer -->
<!-- ********** -->

<ptplugin name="webVideoViewer" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="15" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="0.80000000000000004" type="float" />
		<option name="container_topleft_border_radius" value="15" type="int" />
		<option name="container_topright_border_radius" value="15" type="int" />
		<option name="container_bottomleft_border_radius" value="15" type="int" />
		<option name="container_bottomright_border_radius" value="15" type="int" />
		<option name="container_border_width" value="0" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="false" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.50000762951094835" type="float" />

		<option name="title_displayed" value="false" type="bool" />
		<option name="title_position" value="top" type="string" />
		<option name="title_font" value="Verdana" type="string" />
		<option name="title_size" value="14" type="int" />
		<option name="title_weight" value="normal" type="string" />
		<option name="title_style" value="normal" type="string" />
		<option name="title_decoration" value="none" type="string" />
		<option name="title_color" value="000000" type="string" />
		<option name="caption_displayed" value="false" type="bool" />
		<option name="video_autoplay" value="false" type="bool" />
		<option name="fullscreen_displayed" value="true" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="webVideoViewerfullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="webVideoViewerclose_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_webVideoViewer')" type="string" />
		<option name="zorder" value="8" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_webVideoViewer">
	set(ptplugin[webVideoViewer].jsready, true);
</action>

<action name="openWebVideo_webVideoViewer">
	ifnot(ptplugin[webVideoViewer].isOpen,
		set(ptplugin[webVideoViewer].isOpen, true);
		set(ptplugin[webVideoViewer].doNotDeleteMe, false);
		pauseautorotation(forceplugin);

		
		getmessage(webVideoViewer_boxurl, %1);
		js(invokePluginFunction(webVideoViewer, loadSingleArrayItem, get(webVideoViewer_boxurl), %2));
		events.dispatch(onremovedisplayedobject);
	,
		if('%1' != webVideoViewer_boxurl,
			closeKolorBox_webVideoViewer();
			delayedcall(0.3,openWebVideo_webVideoViewer(%1,%2););
		);
	);
</action>

<action name="toggleWebVideo_webVideoViewer">
	js(invokePluginFunction(webVideoViewer, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_webVideoViewer">
	js(invokePluginFunction(webVideoViewer, closeKolorBox));
</action>

<action name="closeKolorBoxCallback_webVideoViewer">
	resumeautorotation(forceplugin);

	
	set(ptplugin[webVideoViewer].isOpen, false);
</action>

<action name="changeLanguage_webVideoViewer">
	if(ptplugin[webVideoViewer].jsready,
		stopdelayedcall(delay_webVideoViewer);
		js(invokePluginFunction(webVideoViewer, changeLanguage));
	,
		delayedcall(delay_webVideoViewer, 0.1, changeLanguage_webVideoViewer(););
	);
</action>

<events name="kolorBoxEvents_webVideoViewer" 
	keep="true" 
	changetourlanguage="changeLanguage_webVideoViewer();"
	/>

<!-- ********** -->
<!-- PDF Box -->
<!-- id : PdfViewer -->
<!-- ********** -->

<ptplugin name="PdfViewer" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="15" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="100" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="100" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="0.80000000000000004" type="float" />
		<option name="container_topleft_border_radius" value="15" type="int" />
		<option name="container_topright_border_radius" value="15" type="int" />
		<option name="container_bottomleft_border_radius" value="15" type="int" />
		<option name="container_bottomright_border_radius" value="15" type="int" />
		<option name="container_border_width" value="0" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="1" type="float" />
		<option name="overlay_displayed" value="false" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.50000762951094835" type="float" />

		<option name="title_displayed" value="false" type="bool" />
		<option name="title_position" value="top" type="string" />
		<option name="title_font" value="Verdana" type="string" />
		<option name="title_size" value="14" type="int" />
		<option name="title_weight" value="normal" type="string" />
		<option name="title_style" value="normal" type="string" />
		<option name="title_decoration" value="none" type="string" />
		<option name="title_color" value="000000" type="string" />
		<option name="caption_displayed" value="false" type="bool" />
		<option name="fullscreen_displayed" value="true" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="PdfViewerfullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="PdfViewerclose_text" type="string" />

		<option name="iframe_default_width" value="600" type="int" />
		<option name="iframe_default_height" value="840" type="int" />
		<option name="iframe_devices_width" value="1024" type="int" />
		<option name="iframe_devices_height" value="5000" type="int" />
		<option name="force_ios_scrolling" value="true" type="bool" />
		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_PdfViewer')" type="string" />
		<option name="zorder" value="9" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_PdfViewer">
	set(ptplugin[PdfViewer].jsready, true);
</action>

<action name="openPDF_PdfViewer">
	ifnot(ptplugin[PdfViewer].isOpen,
		set(ptplugin[PdfViewer].isOpen, true);
		set(ptplugin[PdfViewer].doNotDeleteMe, false);
		set(PdfViewer_boxurl, %1);
		pauseautorotation(forceplugin);

		js(invokePluginFunction(PdfViewer, loadSingleArrayItem, %1?iframe=true, %2));
		events.dispatch(onremovedisplayedobject);
	,
		if('%1' != PdfViewer_boxurl,
			closeKolorBox_PdfViewer();
			delayedcall(0.3,openPDF_PdfViewer(%1,%2););
		);
	);
</action>

<action name="togglePDF_PdfViewer">
	js(invokePluginFunction(PdfViewer, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_PdfViewer">
	js(invokePluginFunction(PdfViewer, closeKolorBox));
</action>

<action name="closeKolorBoxCallback_PdfViewer">
	resumeautorotation(forceplugin);

	set(ptplugin[PdfViewer].isOpen, false);
</action>

<action name="changeLanguage_PdfViewer">
	if(ptplugin[PdfViewer].jsready,
		stopdelayedcall(delay_PdfViewer);
		js(invokePluginFunction(PdfViewer, changeLanguage));
	,
		delayedcall(delay_PdfViewer, 0.1, changeLanguage_PdfViewer(););
	);
</action>

<events name="kolorBoxEvents_PdfViewer" 
	keep="true"
	changetourlanguage="changeLanguage_PdfViewer();"
	/>
 <!-- ********** --> <!-- 360Images CoOL Hotspots Plugin --> <!-- CoOL Hotspots --> <!-- id : cool_hotspot --> <!-- ********** -->    <include url="%FIRSTXML%/graphics/coolhotspots.xml"/>      <style cooltype="rectangular" name="" type="container" width="100" height="50" bgalpha="0" bgcapture="true" accuracy="0" rectangular_width="100" rectangular_height="50" rectangular_width_onover="300" rectangular_height_onover="150" oy="-15" alwayson="false" ttalign="top" ttedge="bottom"  onover=" hidebbhs(); set(zorder,20); tween(width,get(rectangular_width_onover)); tween(height,get(rectangular_height_onover)); tween(layer[get(mybubble)].width,get(rectangular_width_onover)); tween(layer[get(mybubble)].height,get(rectangular_height_onover)); tween(layer[get(mypreview)].alpha,1); set(layer[get(mypreview)].enabled,true); "  onout=" set(zorder,2); tween(width,get(rectangular_width)); tween(height,get(rectangular_height)); tween(layer[get(mybubble)].width,get(rectangular_width)); tween(layer[get(mybubble)].height,get(rectangular_height)); ifnot(alwayson,tween(layer[get(mypreview)].alpha,0)); set(layer[get(mypreview)].enabled,false); "  ondown.touch="onover();"  onloaded=" txtadd(hotspot[get(name)].permanentTooltipForSpot, get(tooltip), '_permanent'); delayedcall(0.1, if(layer[get(permanentTooltipForSpot)].html, set(layer[get(permanentTooltipForSpot)].ox,0); set(layer[get(permanentTooltipForSpot)].oy,-10); ); );  txtadd(mybubble,'bubble',get(name)); addlayer(get(mybubble)); copy(hotspot[get(name)].mybubble,mybubble); layer[get(mybubble)].loadstyle(cool_hotspotrectangularlayer); txtadd(mypreview,'preview_',get(name)); addlayer(get(mypreview)); copy(hotspot[get(name)].mypreview,mypreview);   if(linkedscene, set(layer[get(mypreview)].url,get(scene[get(linkedscene)].thumburl)); ); if(linkedgroup, set(layer[get(mypreview)].url,get(panoramagroup[get(linkedgroup)].thumburl)); ); if(photourl, set(layer[get(mypreview)].url,get(photourl)); );  layer[get(mypreview)].loadstyle(cool_hotspotrectangular_previewlayer); txtadd(mypin,'pin',get(name)); addlayer(get(mypin)); layer[get(mypin)].loadstyle(cool_hotspotrectangular_pin); txtadd(parentlayer,'hotspot[',get(name),']'); copy(layer[get(mybubble)].parent,parentlayer); copy(layer[get(mypin)].parent,parentlayer); txtadd(parentlayer2,'layer[',get(mybubble),']'); copy(layer[get(mypreview)].parent,parentlayer2); txtadd(clickaction,'callwith(hotspot[',get(name),'],onclick)'); copy(layer[get(mypreview)].onclick,clickaction); " /> <style name="cool_hotspotrectangularlayer" type="container" width="100" height="50" bgalpha="0" bgborder="3 0xffffff 1" bgcapture="true" maskchildren="true" accuracy="1" ondown.touch="callwith(get(parent),onover);" align="center"  bgshadow="5 5 10 0 0x000000 0.5 inset"  /> <style name="cool_hotspotrectangular_previewlayer" align="center" width="300" accuracy="1" height="prop" alpha="0" enabled="false" onloaded="if(pixelheight LT 150,set(height,150);set(width,prop));" /> <style name="cool_hotspotrectangular_pin" url="graphics/360imageshotspots/pin.png" align="bottom" edge="top" width="20" height="15" />    
  <!-- FLOORPLAN -->
  <action name="hideFloorplan">set(tour_displayfloorplan, false);events.dispatch(onhidetourfloorplan);</action>
  <action name="showFloorplan">set(tour_displayfloorplan, true); events.dispatch(onshowtourfloorplan);</action>


  <action name="displayWebVideo">
    if(layer[webvideodisplay_bg],

    ,
      <!-- add overlay -->
      addlayer(webvideodisplay_bg);
      set(layer[webvideodisplay_bg].type, container);
      set(layer[webvideodisplay_bg].zorder, 98);
      set(layer[webvideodisplay_bg].align, topleft);
      set(layer[webvideodisplay_bg].width, 100%);
      set(layer[webvideodisplay_bg].height, 100%);
      set(layer[webvideodisplay_bg].bgcolor, %16);
      set(layer[webvideodisplay_bg].bgalpha, %17);
      set(layer[webvideodisplay_bg].bgcapture, true);
      set(layer[webvideodisplay_bg].handcursor, false);
      set(layer[webvideodisplay_bg].alpha, 0.0);
      set(layer[webvideodisplay_bg].onclick, displayWebVideoObjectClose() );
      tween(layer[webvideodisplay_bg].alpha, 1.0, 0.5, default,


        addlayer(webvideodisplay_player);
        set(layer[webvideodisplay_player].parent, layer[webvideodisplay_bg]);
        set(layer[webvideodisplay_player].align, %13);
        set(layer[webvideodisplay_player].x, %14);
        set(layer[webvideodisplay_player].y, %15);
        set(layer[webvideodisplay_player].alpha, 0.0);
        set(layer[webvideodisplay_player].pauseautorotate, %18);
        set(layer[webvideodisplay_player].pausebgsound, %19);

        sub(maxstagewidth, get(stagewidth), %14);
        sub(maxstageheight, get(stageheight), %15);

        if('4:3' == '%3',
          div(aspect, 4, 3);
        ,
          if('2.39:1' == '%3',
            div(aspect, 2.39, 1);
          ,
            div(aspect, 16, 9);
          );
        );
        if(%9,
          if(%10 == 'pixel',
            set(new_videowidth, %9);
            div(new_videoheight, get(new_videowidth), get(aspect));
          ,
            mul(new_videowidth, get(maxstagewidth), %9);
            div(new_videowidth, 100);
            div(new_videoheight, get(new_videowidth), get(aspect));
          );
        ,
          ifnot(%11,
            set(max_videoheight, %2);
            set(new_videowidth, %1);
            set(new_videoheight, %2);
          );
        );
        if(%11,
          ifnot(%9,
            if(%12 == 'pixel',
              set(new_videoheight, %11);
              mul(new_videowidth, get(new_videoheight), get(aspect));
            ,
              mul(new_videoheight, get(maxstageheight), %11);
              div(new_videoheight, 100);
              mul(new_videowidth, get(new_videoheight), get(aspect));
            );
            set(max_videoheight, get(new_videoheight));
          ,
            if(%12 == 'pixel',
              set(max_videoheight, %11);
            ,
              mul(max_videoheight, get(maxstageheight), %11);
              div(max_videoheight, 100);
            );
          );
        ,
          set(max_videoheight, get(new_videoheight));
        );
        if(new_videowidth GT maxstagewidth,
          set(new_videowidth, get(maxstagewidth));
          div(new_videoheight, get(new_videowidth), get(aspect));
        );
        if(max_videoheight GT maxstageheight,
          set(max_videoheight, get(maxstageheight));
        );
        if(new_videoheight GT max_videoheight,
          set(new_videoheight, get(max_videoheight));
          mul(new_videowidth, get(new_videoheight), get(aspect));
        );
        roundval(new_videowidth);
        roundval(new_videoheight);
        set(layer[webvideodisplay_player].width, get(new_videowidth));
        set(layer[webvideodisplay_player].height, get(new_videoheight));

        set(tour_current_played_web_video, %8);

        if(device.html5,

          txtadd(iframecode, '[iframe width="',get(layer[webvideodisplay_player].width),'" height="',get(layer[webvideodisplay_player].height),'" src="','%4','%8','?','%6','" frameborder="0" allowfullscreen][/iframe]');
          set(layer[webvideodisplay_player].html, get(iframecode));
          set(layer[webvideodisplay_player].padding, 0);
          set(layer[webvideodisplay_player].type, 'text');
          set(layer[webvideodisplay_player].onloaded, displayWebVideoObjectReady() );
        ,

          txtadd(embedurl, '%5','%8','%7');
          set(layer[webvideodisplay_player].onloaded, registercontentsize(%1,%2);displayWebVideoObjectReady(); );
          set(layer[webvideodisplay_player].url, get(embedurl));
        );
      );
    );
  </action>
  <action name="displayWebVideoObjectReady">
    if(layer[webvideodisplay_player],
      set(layer[webvideodisplay_player].currentCall, true);
      events.dispatch(onremovedisplayedobject);
      tween(layer[webvideodisplay_player].alpha, 1.0, default, default,
        if(layer[webvideodisplay_player].pauseautorotate,pauseautorotation(forcehotspot);
);
      );
    );
  </action>
  <action name="displayWebVideoObjectClose">
    if(layer[webvideodisplay_player],
      if(layer[webvideodisplay_player].currentCall,
        set(layer[webvideodisplay_player].currentCall, false);
      ,
        set(layer[webvideodisplay_bg].onclick, null);
        delete(tour_current_played_web_video);
        tween(layer[webvideodisplay_player].alpha, 0.0, 0.25, default);
        tween(layer[webvideodisplay_bg].alpha,0.0, 0.50, default,
          if(layer[webvideodisplay_player].pauseautorotate,resumeautorotation(forcehotspot);
);
          removelayer(webvideodisplay_bg);
          removelayer(webvideodisplay_player);
        );
      );
    );
  </action>
  <events name="displayWebVideoObjectEvents" keep="true" onremovedisplayedobject="displayWebVideoObjectClose();"/>

  <!-- Tour Information -->
  <action name="hideTourInfo">set(tour_displayinfo, false);events.dispatch(onhidetourinfo);</action>
  <action name="showTourInfo">set(tour_displayinfo, true); events.dispatch(onshowtourinfo);</action>


</krpano>